<apex:component controller="IPadDemoComponentController" id="followupComponent" >
    <apex:attribute name="compName" type="String" required="true" assignTo="{!currentComponent}" description=""/>
    <apex:attribute name="appId" type="String" required="true" assignTo="{!applicationId}" description=""/>
    <apex:attribute name="bodyColor" type="String" required="true" description=""/>    
    <apex:attribute name="bgImage" type="String" required="true" description=""/>
    <apex:attribute name="mapHeight" type="Integer" required="true" description=""/>
    <apex:attribute name="mapWidth" type="Integer" required="true" description=""/>
    <apex:attribute name="mapZoom" type="Integer" required="true" description="" />
    <apex:attribute name="showTaskParam" type="Boolean" required="true" description="" assignTo="{!showTasks}"/>
    <apex:attribute name="showEventParam" type="Boolean" required="true" description="" assignTo="{!showEvents}"/>
    <style>
        #dPage7{
            background: {!bodyColor};
            background-image: url({!bgImage});
        }
        #dPage7 .links-holder {
            background: rgba(255, 255, 255, 0.1);
            width: 250px;
            padding: 15px;
            height: 545px;
            border-right: solid 1px #fff;
            border-radius: 10px;           
        }
        #dPage7 .content-holder {
            background: rgba(255, 255, 255, 0.1);
            width: 650px;
            padding: 15px;
            border-radius: 10px;
            border-left: solid 1px #fff;
            height: 545px;
            margin-left:10px;
        }
        .innerlogo{
            background:none !important;
        }
        .left-container{
            float: left;
            width: 28%;
            padding: 0 1%;
        }
        .map-container{
            float: right;
            width: 70%;
        }
        .task-list{
            background: rgba(255, 255, 255, 0.4);
            color: #222;
            text-shadow: none;
            font-size: 12px;        
        }
        .activity-date-container{
            display: block;
            font-weight: bold;
            padding: 5px;
            border-bottom: 1px solid #999;
            background: rgba(0, 0, 0, 0.3);
        }
        .activity-container{
            display: block;
            padding: 10px 20px;
            background: white;
        }
        .activity-heading{
            display: block;
            padding: 2px 10px;
            font-weight: bold;
            background: #ccc;
        }
        #map_canvas {
            width: {!mapWidth}px;
            height: {!mapHeight}px;
        }
        .calendar{
            margin-bottom: 10px;
        }
        .calendar table{
            border-collapse: collapse;
            width: 100%;
        }
        .calendar .month-label{
            font-weight: bold;
            display: block;
            text-align: center;
            background: rgba(0, 0, 0, 0.3);
            padding: 10px 0;
            text-shadow: none;
        }
        .calendar th, .calendar td{
            background: white;
            text-shadow: none;
            text-align: center;
            padding: 5px 0;
            border: 1px solid #eee;
        }
        .calendar th{
            background: #ccc;
        }
    </style>


    <div data-role="content" class="ipad-content"> 
        <apex:repeat value="{!imageList}" var="imageListVar">
            <image src="{!imageListVar.ImageURL__c}" 
                style="position: relative;
                        left: {!imageListVar.LocationX__c}px;
                        top: {!imageListVar.LocationY__c}px;
                        height: {!imageListVar.Height__c}px;
                        width: {!imageListVar.Width__c}px;" />
        </apex:repeat>
        <apex:form >
        <div class="left-container">
            <div class="links-holder">
            <div class="calendar">
                <apex:outputPanel id="calendar-panel">
                    <span class="month-label">
                        <apex:commandLink value="< Prev" rerender="calendar-panel" action="{!getPreviousMonth}" style="float: left; margin-left: 10px; color: white;"/>
                        {!calendarMonth.month}
                        <apex:commandLink value="Next >" rerender="calendar-panel" action="{!getNextMonth}" style="float: right; margin-right: 10px; color: white; "/>
                    </span>
                    <table>
                        <tr>
                            <th>S</th><th>M</th><th>T</th><th>W</th><th>T</th><th>F</th><th>S</th>
                        </tr>
                        <apex:repeat value="{!calendarMonth.weekList}" var="calendarWeekVar">
                            <tr>
                            <apex:repeat value="{!calendarWeekVar.dayList}" var="calendarDayVar">
                                <td>{!calendarDayVar}</td>
                            </apex:repeat>
                            </tr>
                        </apex:repeat>                
                    </table>
                </apex:outputPanel>
            </div>
            
            <div class="task-list">
                <apex:repeat value="{!taskDateList}" var="taskDateListVar">
                    <div class="date-container">
                        <apex:outputText value="{!taskDateListVar.activityDate}" styleClass="activity-date-container"/>
                        <apex:outputPanel rendered="{!taskDateListVar.taskList.size!=0}" styleClass="activity-heading">
                        Appointments 
                        </apex:outputPanel>
                        <apex:repeat value="{!taskDateListVar.taskList}" var="taskListVar">
                            <apex:commandLink action="{!refreshAccountMap}" styleClass="activity-container" value="{!taskListVar.Subject}" rerender="accountMap">
                                <apex:param assignTo="{!chosenTaskAccountId}" value="{!taskListVar.AccountId}" name="chosenTaskAccountId"/>
                            </apex:commandLink>
                        </apex:repeat>
                        <apex:outputPanel rendered="{!taskDateListVar.eventList.size!=0}" styleClass="activity-heading">
                        Marketing Events
                        </apex:outputPanel>
                        <apex:repeat value="{!taskDateListVar.eventList}" var="eventListVar">
                            <span class="activity-container">
                                <apex:outputText value="{0, date, HH:mm}  ">
                                    <apex:param value="{!eventListVar.StartDateTime}" />
                                </apex:outputText>  
                                <apex:commandLink action="{!refreshAccountMap}" value="{!eventListVar.Subject}" rerender="accountMap">
                                    <apex:param assignTo="{!chosenTaskAccountId}" value="{!eventListVar.AccountId}" name="chosenTaskAccountId"/>
                                </apex:commandLink>
                            </span>
                        </apex:repeat>
                    </div>
                </apex:repeat>
            </div>
            </div>
        </div>
        
        <apex:outputPanel styleClass="map-container" id="accountMap">
            <script>
                if("{!accountMap.Id}"){
                    initAccountMap({
                        Id : "{!accountMap.Id}",
                        Name : "{!accountMap.Name}",
                        BillingStreet : "{!accountMap.BillingStreet}",  
                        BillingCity : "{!accountMap.BillingCity}",  
                        BillingState : "{!accountMap.BillingState}",  
                        BillingPostalCode : "{!accountMap.BillingPostalCode}",
                        BillingCountry : "{!accountMap.BillingCountry}",
                        Phone : "{!accountMap.Phone}"
                    });
                }
            </script>
            <!-- <image src="https://maps.googleapis.com/maps/api/staticmap?{!mapParam}" />             -->
           <div class=" content-holder">
          
            <div id="map_canvas"></div>
            </div>
        </apex:outputPanel>

        </apex:form>
    </div> 

    <script type="text/javascript" src="https://maps.google.com/maps/api/js?sensor=false"></script>
    <script>
        function attachAccountLinkListener(){
            console.log('attaching listener');
            $('.account-name').on('click', function(){
                var accountname = $(this).text();
                var street = $(this).siblings('.account-map-street').text();
                var city = $(this).siblings('.account-map-city').text();
                var state = $(this).siblings('.account-map-state').text();
                var postalcode = $(this).siblings('.account-map-postalcode').text();                
                var country = $(this).siblings('.account-map-country').text();
                var phone = $(this).siblings('.account-map-phone').text();
            
                $('#account-name').text(accountname ? accountname : '');
                $('#contact-address-street').text(street ? street : '');
                $('#contact-address-city').text(city ? city : '');
                $('#contact-address-state').text(state ? state : '');
                $('#contact-address-postalcode').text(postalcode ? postalcode : '');
                $('#contact-address-country').text(country ? country : '');
                $('#contact-phone').text(phone ? phone : '');
            });
        
        }
    
        function initAccountMap(accountMap){
            console.log(accountMap);
            var geocoder;
            var geocoder1;
            var infowindow1;
            var set_center=0;
            var openInfowindow = null;
            var account=[accountMap];
               
            geocoder = new google.maps.Geocoder();
            var mapOptions = {
                zoom: {!mapZoom},
                scrollwheel: true,
                zoomControl: true,
                mapTypeId: google.maps.MapTypeId.ROADMAP
            }
            var map = new google.maps.Map(document.getElementById('map_canvas'), mapOptions);

            for(var i=0; i<account.length; i++){                
                console.log(account[i]);
                var address = account[i].BillingStreet+ ', ' + account[i].BillingCity+ ' ' + account[i].BillingState+ ', ' + account[i].BillingPostalCode;
                var contentString = '<div class="infoWindow">'
                    + '<a href="#dPage7-2" class="account-name" >' + account[i].Name+ '</a><br />'
                    + '<span class="account-map-street">' + account[i].BillingStreet + '</span>, '
                    + '<span class="account-map-city">' + account[i].BillingCity + '</span><br />'
                    + '<span class="account-map-state">' + account[i].BillingState + '</span>, '
                    + '<span class="account-map-postalcode">' + account[i].BillingPostalCode + '</span><br />'
                    + '<span class="account-map-country">' + account[i].BillingCountry + '</span><br />'
                    + '<span class="account-map-phone">' + account[i].Phone + '</span><br />'
                    + '</div>';
                geocoder.geocode( {'address': address}, function(results, status) {
                    if (status == google.maps.GeocoderStatus.OK) {
                        var infowindow = new google.maps.InfoWindow({
                            content: contentString
                        });
                        if (set_center == 0) {
                            map.setCenter(results[0].geometry.location);
                            set_center = 1;
                        }
                        var marker = new google.maps.Marker({
                            map: map,
                            position: results[0].geometry.location,
                        });
                        google.maps.event.addListener(marker, 'click', function() {
                            if(openInfowindow != null) {
                                openInfowindow.close();
                            }
                            infowindow.open(map,marker);
                            openInfowindow = infowindow;
                            attachAccountLinkListener();                             
                        });
                    }else{
                        alert('there was a problem displaying the map');
                    }                        
                });
            }

        }

    </script>

</apex:component>